package com.happy3w.javaclassworker.classfile;

import java.util.EnumSet;

public enum AccessFlag {
    Public(0x0001),
    Private(0x0002),
    Protected(0x0004),
    Static(0x0008),
    Final(0x0010),
    Synchronized(0x0020),
    Super(0x0020), // No Effect
    Bridge(0x0040),
    Volatile(0x0040),
    Vararges(0x0080),
    Transient(0x0080),
    Native(0x0100),
    Interface(0x0200),
    Abstract(0x0400),
    Strict(0x0800),
    Synthetic(0x1000), // generated by a compiler and does not appear in source code
    Annotation(0x2000),
    Enum(0x4000);

    private final int value;
    AccessFlag(int value) {
        this.value = value;
    }

    public int getValue() {
        return value;
    }

    public static EnumSet<AccessFlag> getClassAccessFlags() {
        return EnumSet.of(Public, Final, Super, Interface, Abstract, Synthetic, Annotation, Enum);
    }

    public static EnumSet<AccessFlag> getMethodAccessFlags() {
        return EnumSet.of(Public, Private, Protected, Static, Final, Synchronized, Bridge, Vararges, Native, Abstract, Strict, Synthetic);
    }

    public static EnumSet<AccessFlag> getFieldAccessFlags() {
        return EnumSet.of(Public, Private, Protected, Static, Final, Synchronized, Volatile, Transient, Synthetic, Enum);
    }

}
